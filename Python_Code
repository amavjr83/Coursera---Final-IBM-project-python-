# Install necessary libraries (run only once)
!pip install yfinance plotly lxml --quiet

# Q1: Use yfinance to extract Tesla stock data
import yfinance as yf
import pandas as pd

# Tesla stock data
tesla = yf.Ticker("TSLA")
tesla_data = tesla.history(period="max")
tesla_data.reset_index(inplace=True)

# Display first five rows
tesla_data.head()

# Q2: Webscrape Tesla revenue data from Macrotrends
import requests
from bs4 import BeautifulSoup

url = "https://www.macrotrends.net/stocks/charts/TSLA/tesla/revenue"
html_data = requests.get(url).text
soup = BeautifulSoup(html_data, "html.parser")

# Find the correct revenue table
tables = soup.find_all("table")
revenue_table = None
for table in tables:
    if "Tesla Quarterly Revenue" in str(table):
        revenue_table = table
        break

# Read and clean revenue table
tesla_revenue = pd.read_html(str(revenue_table))[0]
tesla_revenue.columns = ["Date", "Revenue"]
tesla_revenue = tesla_revenue[tesla_revenue["Revenue"] != ""]
tesla_revenue["Revenue"] = tesla_revenue["Revenue"].str.replace("$", "").str.replace(",", "")
tesla_revenue.dropna(inplace=True)
tesla_revenue["Revenue"] = pd.to_numeric(tesla_revenue["Revenue"])

# Display last five rows
tesla_revenue.tail()

# Q3: Use yfinance to extract GME stock data
gme = yf.Ticker("GME")
gme_data = gme.history(period="max")
gme_data.reset_index(inplace=True)

# Display first five rows
gme_data.head()

# Q4: Extract GME revenue using yfinance financials (alternative to Macrotrends)
def get_revenue_df(ticker_symbol):
    ticker = yf.Ticker(ticker_symbol)
    fin = ticker.quarterly_financials.T.reset_index()
    if "Total Revenue" in ticker.quarterly_financials.index:
        rev_col = "Total Revenue"
    elif "Revenue" in ticker.quarterly_financials.index:
        rev_col = "Revenue"
    else:
        raise ValueError(f"Revenue column not found for {ticker_symbol}")
    df = fin[["index", rev_col]].copy()
    df.columns = ["Date", ticker_symbol]
    df["Date"] = pd.to_datetime(df["Date"])
    return df

# Get Tesla and GME revenue data
tesla_rev = get_revenue_df("TSLA")
gme_rev = get_revenue_df("GME")

# Merge and format
combined_rev = pd.merge(tesla_rev, gme_rev, on="Date", how="outer").sort_values("Date", ascending=False).reset_index(drop=True)
formatted_rev = combined_rev.copy()
formatted_rev["TSLA"] = formatted_rev["TSLA"].apply(lambda x: f"${x:,.0f}" if pd.notnull(x) else "N/A")
formatted_rev["GME"] = formatted_rev["GME"].apply(lambda x: f"${x:,.0f}" if pd.notnull(x) else "N/A")

# Display last five rows of GME revenue
gme_rev.tail()

# Q5 & Q6: Plotting Function and Graphs
import plotly.graph_objects as go

def make_graph(stock_data, title):
    fig = go.Figure()
    fig.add_trace(go.Scatter(x=stock_data['Date'], y=stock_data['Close'], mode='lines', name='Close Price'))
    fig.update_layout(
        title=title,
        xaxis_title='Date',
        yaxis_title='Closing Price (USD)',
        xaxis_rangeslider_visible=True
    )
    fig.show()

# Plot Tesla stock
make_graph(tesla_data, "Tesla Stock Price Over Time")

# Plot GME stock
make_graph(gme_data, "GameStop Stock Price Over Time")
